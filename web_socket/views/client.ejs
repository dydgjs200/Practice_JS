<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Web socket Chating</title>
  </head>
  <body>
    <h1>web socket chating</h1>

    <!-- 채팅 내역 -->
    <ul></ul>

    <!-- 채팅 인풋 -->
    <form id="chat">
      이름 <input type="text" name="name" id="name" /> <br />
      내용 <input type="text" name="message" id="message" /><br />
      <button>전송</button>
    </form>

    <script>
      // 클라이언트 소켓 객체
      const socket = new WebSocket("ws://localhost:8000");
      const chatForm = document.getElementById("chat");
      const ul = document.querySelector("ul");

      // open 이벤트
      socket.addEventListener("open", (event) => {
        console.log("서버 연결");
      });

      // close 이벤트
      socket.addEventListener("close", (event) => {
        console.log("서버 닫힘");
      });

      // error 이벤트
      socket.addEventListener("error", (event) => {
        console.log("서버 오류 : ", event.console.error);
      });

      // message 이벤트
      socket.addEventListener("message", (event) => {
        console.log("event > ", event);
        const data = JSON.parse(event.data);
        const { msg, name } = data;

        const li = document.createElement("li");
        const ul = document.querySelector("ul");

        li.textContent = `${name}님 - ${msg}`;
        ul.appendChild(li);
      });

      // 폼 submit 이벤트
      chatForm.addEventListener("submit", (event) => {
        event.preventDefault(); //새로고침 방지

        // input 정보를 메세지 생성
        const msg = chatForm.message.value;
        const name = chatForm.name.value;

        const data = { msg: msg, name: name };

        // data를 웹소켓 서버로 전송 -> JSON으로 변환해서 전송(다른 서버가 JS를 쓰지않을수도 있으니 공통인 JSON으로 변환)
        socket.send(JSON.stringify(data));
        chatForm.reset();
      });
    </script>
  </body>
</html>
